version: "3.9"

services:

  redis:
    image: "redis:${REDIS_VERSION}"
    restart: always
    volumes:
      - ./redis-server:/data/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - '6378:6378'
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  db:
    env_file:
      - ./.env
    image: "mysql:${MYSQL_VERSION}"
    container_name: db_mysql_server
    environment:
      - MYSQL_TCP_PORT=${MYSQL_TCP_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_NAME=${MYSQL_NAME}
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
    ports:
      - 3306:3306
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_unicode_ci']

  web:
    build: .
    container_name: backend
    volumes:
      - .:/code
    ports:
      - 8000:8000
    env_file:
      - ./.env
    environment:
      - DATABASE_NAME=blog
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
    depends_on:
      - db
      - redis
    command:  python manage.py runserver 0.0.0.0:8000

  celery:
    build:
       context: .
    container_name: celery
    command: celery -A celery worker --loglevel=info
    volumes:
       - .:/code
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

networks:
  default:
    external:
      name: networks_forum